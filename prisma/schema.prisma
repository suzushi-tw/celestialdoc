
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @unique //matches kinde user id

  File    File[]
  Album   Album[]
  Sent    Send[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
  filesThisMonth Int @default(0)
 
}

model File {
  id   String @id @default(cuid())
  name String

  favorite Boolean @default(false)

  url      String
  key      String
  Sent     Send[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Album {
  id   String @id @default(cuid())
  name String

  favorite Boolean@default(false)

  url      String
  key      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}


model Send {
  id                String  @id @default(cuid())
  hasPassword       Boolean @default(false)
  password          String  @default("none")
  isDownloadEnabled Boolean @default(false)
  recipientEmail    String  @default("")
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  url               String @default("")
  Key               String @default("")
  name              String @default("")

  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  File      File?    @relation(fields: [fileId], references: [id])
  fileId    String?
}


